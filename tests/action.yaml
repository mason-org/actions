---
name: Test mason-registry
description: Test mason-registry package definitions.

inputs:
  target:
    required: true
    description: The target platform to test (e.g. "darwin_x64").
  packages:
    required: true
    description: The packages to test (space separated string).
  GITHUB_TOKEN:
    required: true
    description: GitHub token.

runs:
  using: composite
  steps:
    - shell: bash
      id: prepare
      run: $GITHUB_ACTION_PATH/prepare.sh
      env:
        PACKAGES: ${{ inputs.packages }}
        TARGET: ${{ inputs.target }}

    - if: ${{ steps.prepare.outputs.setup_beam == 'true' }}
      uses: erlef/setup-beam@v1
      with:
        otp-version: '24'
        elixir-version: '1.14'
        rebar3-version: '3'

    - if: ${{ steps.prepare.outputs.setup_nix == 'true' }}
      uses: cachix/install-nix-action@v22
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - if: ${{ steps.prepare.outputs.setup_R == 'true' }}
      uses: r-lib/actions/setup-r@v2

    - if: ${{ steps.prepare.outputs.setup_haskell == 'true' }}
      uses: haskell/actions/setup@v2
      with:
        enable-stack: true

    - if: ${{ steps.prepare.outputs.setup_java == 'true' }}
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '18'

    - if: ${{ steps.prepare.outputs.setup_nim == 'true' }}
      uses: jiro4989/setup-nim-action@v1

    - if: ${{ steps.prepare.outputs.setup_golang == 'true' }}
      uses: actions/setup-go@v3
      with:
        go-version: '>=1.17.0'

    - if: ${{ runner.os == 'Windows' && steps.prepare.outputs.setup_ruby == 'true' }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'

    - if: ${{ runner.os == 'Windows' && steps.prepare.outputs.setup_luarocks == 'true' }}
      name: Add msbuild to PATH
      uses: ilammy/msvc-dev-cmd@v1

    - if: ${{ steps.prepare.outputs.setup_luarocks == 'true' }}
      uses: leafo/gh-actions-lua@v10

    - if: ${{ steps.prepare.outputs.setup_luarocks == 'true' }}
      # uses fork with Windows support added by hishamhm, upstream https://github.com/leafo/gh-actions-luarocks seems unmaintained
      uses: mason-org/gh-actions-luarocks@v5

    - if: ${{ steps.prepare.outputs.setup_python == 'true' }}
      uses: actions/setup-python@v5
      with:
        # The last specified version will be used as the default one.
        python-version: |
          3.8
          3.9
          3.10
          3.11
          3.12

    - if: ${{ steps.prepare.outputs.PACKAGES != '' }}
      name: Clone mason.nvim
      shell: bash
      run: |
        git clone https://github.com/williamboman/mason.nvim "$GITHUB_ACTION_PATH/mason.nvim"

    - if: ${{ steps.prepare.outputs.PACKAGES != '' }}
      name: Setup neovim
      uses: rhysd/action-setup-vim@v1
      with:
        neovim: true
        version: v0.7.0

    - if: ${{ steps.prepare.outputs.PACKAGES != '' }}
      name: mason.nvim healthcheck
      shell: bash
      id: healthchecks
      run: |
        nvim --headless \
          -c "set rtp^=$GITHUB_ACTION_PATH/mason.nvim" \
          -c 'checkhealth mason' \
          -c 'lua print(table.concat(vim.api.nvim_buf_get_lines(0, 1, -1, false), "\n"))' \
          -c qa

    - if: ${{ steps.prepare.outputs.PACKAGES != '' }}
      name: Install yq
      uses: mason-org/actions/setup-yq@v1

    - if: ${{ steps.prepare.outputs.PACKAGES != '' }}
      name: Install packages
      run: nvim --headless -c "luafile $GITHUB_ACTION_PATH/test-runner.lua" -c 1cq
      shell: bash
      env:
        PACKAGES: ${{ steps.prepare.outputs.PACKAGES }}
        TARGET: ${{ inputs.target }}
        MASON_VERBOSE_LOGS: "1"
        GITHUB_PAT: ${{ inputs.GITHUB_TOKEN }}
